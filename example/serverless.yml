# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: aws-python # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python2.7

# you can overwrite defaults here
  stage: dev01
  region: ap-northeast-1

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
package:
  individually: True
  include:
#    - include-me.py
#    - include-me-dir/**
  exclude:
    - .*
    - node_modules/**
    - tmp/**
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  hello:
    # Specify the wrapping handler in the format:
    # ${function_dir}/wrap.handler
    # The real handler is set in custom.pyIndividually.wrap:${function}.
    handler: hello/wrap.handler


#    The following are a few example events you can configure
#    NOTE: Please make sure to change your handler code to work with those events
#    Check the event documentation for details
#    events:
#      - http:
#          path: users/create
#          method: get
#      - s3: ${env:BUCKET}
#      - schedule: rate(10 minutes)
#      - sns: greeter-topic
#      - stream: arn:aws:dynamodb:region:XXXXXX:table/foo/stream/1970-01-01T00:00:00.000

#    Define function environment variables here
#    environment:
#      variable2: value2
  world:
    handler: world/wrap.handler

  bye:
    handler: wrap.handler


# you can add CloudFormation resource templates here
#resources:
#  Resources:
#    NewResource:
#      Type: AWS::S3::Bucket
#      Properties:
#        BucketName: my-new-bucket
#  Outputs:
#     NewOutput:
#       Description: "Description for the output"
#       Value: "Some output value"
custom:
  pyIndividually:
    # define your ${wrapName}.py to avoid conflicting with the real handler
    # The default is 'wrap'
    wrapName: wrap
    # pip install to ${libSubDir} in the dir that the real function handler
    # resides. The default is 'lib'.
    # e.g. for hello/handler.hello, pip install -t . hello/${libSubDir}
    # Note: it should not be excluded.
    libSubDir: lib
    # Cleanup artifacts(libSubDir, wrap.py, etc.) created by the plugin.
    # The default is true.
    cleanup: True
    # Specify the handler for every function in the format:
    # ${wrapName}:${function}: ${real_handler}
    wrap:hello: hello/handler.hello
    wrap:world: world/handler.world
    wrap:bye: handler.bye
  scriptHooks:
    after:deploy:function:packageFunction: rm -rf tmp/serverless; cp -Rp .serverless tmp/serverless

plugins:
  - serverless-python-individually
  #- serverless-scriptable-plugin

